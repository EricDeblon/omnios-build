Patch based on analysis of the fix in upstream 7-zip at

    https://landave.io/files/patch_7zip_CVE-2018-10115.txt

diff -pruN '--exclude=*.orig' p7zip_16.02~/CPP/7zip/Compress/Rar1Decoder.cpp p7zip_16.02/CPP/7zip/Compress/Rar1Decoder.cpp
--- p7zip_16.02~/CPP/7zip/Compress/Rar1Decoder.cpp	2015-09-01 18:04:52.000000000 +0000
+++ p7zip_16.02/CPP/7zip/Compress/Rar1Decoder.cpp	2018-05-02 12:40:10.226366109 +0000
@@ -29,7 +29,7 @@ public:
 };
 */
 
-CDecoder::CDecoder(): m_IsSolid(false) { }
+CDecoder::CDecoder(): m_IsSolid(false), m_solidAllowed(false) { }
 
 void CDecoder::InitStructures()
 {
@@ -391,6 +391,11 @@ HRESULT CDecoder::CodeReal(ISequentialIn
   if (inSize == NULL || outSize == NULL)
     return E_INVALIDARG;
 
+  if (m_IsSolid && !m_solidAllowed)
+     return S_FALSE;
+
+  m_solidAllowed = false;
+
   if (!m_OutWindowStream.Create(kHistorySize))
     return E_OUTOFMEMORY;
   if (!m_InBitStream.Create(1 << 20))
@@ -470,6 +475,7 @@ HRESULT CDecoder::CodeReal(ISequentialIn
   }
+  m_solidAllowed = true;
   if (m_UnpackSize < 0)
     return S_FALSE;
   return m_OutWindowStream.Flush();
 }
 
diff -pruN '--exclude=*.orig' p7zip_16.02~/CPP/7zip/Compress/Rar1Decoder.h p7zip_16.02/CPP/7zip/Compress/Rar1Decoder.h
--- p7zip_16.02~/CPP/7zip/Compress/Rar1Decoder.h	2014-12-21 12:44:00.000000000 +0000
+++ p7zip_16.02/CPP/7zip/Compress/Rar1Decoder.h	2018-05-02 12:40:10.226596484 +0000
@@ -39,6 +39,7 @@ public:
 
   Int64 m_UnpackSize;
   bool m_IsSolid;
+  bool m_solidAllowed;
 
   UInt32 ReadBits(int numBits);
   HRESULT CopyBlock(UInt32 distance, UInt32 len);
diff -pruN '--exclude=*.orig' p7zip_16.02~/CPP/7zip/Compress/Rar2Decoder.cpp p7zip_16.02/CPP/7zip/Compress/Rar2Decoder.cpp
--- p7zip_16.02~/CPP/7zip/Compress/Rar2Decoder.cpp	2015-10-03 08:49:14.000000000 +0000
+++ p7zip_16.02/CPP/7zip/Compress/Rar2Decoder.cpp	2018-05-02 12:40:10.226854157 +0000
@@ -80,7 +80,8 @@ static const UInt32 kHistorySize = 1 <<
 static const UInt32 kWindowReservSize = (1 << 22) + 256;
 
 CDecoder::CDecoder():
-  m_IsSolid(false)
+  m_IsSolid(false),
+  m_solidAllowed(false)
 {
 }
 
@@ -315,6 +316,10 @@ HRESULT CDecoder::CodeReal(ISequentialIn
   if (inSize == NULL || outSize == NULL)
     return E_INVALIDARG;
 
+  if (m_IsSolid && !m_solidAllowed)
+    return S_FALSE;
+  m_solidAllowed = false;
+
   if (!m_OutWindowStream.Create(kHistorySize))
     return E_OUTOFMEMORY;
   if (!m_InBitStream.Create(1 << 20))
@@ -338,6 +343,7 @@ HRESULT CDecoder::CodeReal(ISequentialIn
       if (m_InBitStream.GetProcessedSize() + 2 <= m_PackSize) // test it: probably incorrect;
         if (!ReadTables())
           return S_FALSE;
+      m_solidAllowed = true;
       return S_OK;
     }
     if (!ReadTables())
@@ -378,6 +384,7 @@ HRESULT CDecoder::CodeReal(ISequentialIn
 
   if (!ReadLastTables())
     return S_FALSE;
+  m_solidAllowed = true;
   return m_OutWindowStream.Flush();
 }
 
diff -pruN '--exclude=*.orig' p7zip_16.02~/CPP/7zip/Compress/Rar2Decoder.h p7zip_16.02/CPP/7zip/Compress/Rar2Decoder.h
--- p7zip_16.02~/CPP/7zip/Compress/Rar2Decoder.h	2015-06-19 10:52:06.000000000 +0000
+++ p7zip_16.02/CPP/7zip/Compress/Rar2Decoder.h	2018-05-02 12:40:10.227043262 +0000
@@ -139,6 +139,7 @@ class CDecoder :
 
   UInt64 m_PackSize;
   bool m_IsSolid;
+  bool m_solidAllowed;
 
   void InitStructures();
   UInt32 ReadBits(unsigned numBits);
diff -pruN '--exclude=*.orig' p7zip_16.02~/CPP/7zip/Compress/Rar3Decoder.cpp p7zip_16.02/CPP/7zip/Compress/Rar3Decoder.cpp
--- p7zip_16.02~/CPP/7zip/Compress/Rar3Decoder.cpp	2016-05-20 08:20:03.000000000 +0000
+++ p7zip_16.02/CPP/7zip/Compress/Rar3Decoder.cpp	2018-05-02 12:40:10.227438106 +0000
@@ -92,7 +92,8 @@ CDecoder::CDecoder():
   _writtenFileSize(0),
   _vmData(0),
   _vmCode(0),
-  m_IsSolid(false)
+  m_IsSolid(false),
+  m_solidAllowed(false)
 {
   Ppmd7_Construct(&_ppmd);
 }
@@ -830,7 +831,10 @@ HRESULT CDecoder::CodeReal(ICompressProg
     bool keepDecompressing;
     RINOK(ReadTables(keepDecompressing));
     if (!keepDecompressing)
+    {
+      m_solidAllowed = true;
       return S_OK;
+    }
   }
 
   for (;;)
@@ -853,6 +857,7 @@ HRESULT CDecoder::CodeReal(ICompressProg
     if (!keepDecompressing)
       break;
   }
+  m_solidAllowed = true;
   RINOK(WriteBuf());
   UInt64 packSize = m_InBitStream.BitDecoder.GetProcessedSize();
   RINOK(progress->SetRatioInfo(&packSize, &_writtenFileSize));
@@ -873,6 +878,10 @@ STDMETHODIMP CDecoder::Code(ISequentialI
     if (!inSize)
       return E_INVALIDARG;
 
+   if (m_IsSolid && !m_solidAllowed)
+      return S_FALSE;
+   m_solidAllowed = false;
+
     if (!_vmData)
     {
       _vmData = (Byte *)::MidAlloc(kVmDataSizeMax + kVmCodeSizeMax);
diff -pruN '--exclude=*.orig' p7zip_16.02~/CPP/7zip/Compress/Rar3Decoder.h p7zip_16.02/CPP/7zip/Compress/Rar3Decoder.h
--- p7zip_16.02~/CPP/7zip/Compress/Rar3Decoder.h	2015-10-03 08:49:12.000000000 +0000
+++ p7zip_16.02/CPP/7zip/Compress/Rar3Decoder.h	2018-05-02 12:40:10.227640636 +0000
@@ -192,6 +192,7 @@ class CDecoder:
   UInt32 _lastFilter;
 
   bool m_IsSolid;
+  bool m_solidAllowed;
 
   bool _lzMode;
   bool _unsupportedFilter;
diff -pruN '--exclude=*.orig' p7zip_16.02~/CPP/7zip/Compress/Rar5Decoder.cpp p7zip_16.02/CPP/7zip/Compress/Rar5Decoder.cpp
--- p7zip_16.02~/CPP/7zip/Compress/Rar5Decoder.cpp	2016-05-20 08:20:04.000000000 +0000
+++ p7zip_16.02/CPP/7zip/Compress/Rar5Decoder.cpp	2018-05-02 12:40:10.227941125 +0000
@@ -72,6 +72,7 @@ CDecoder::CDecoder():
     _writtenFileSize(0),
     _dictSizeLog(0),
     _isSolid(false),
+    _solidAllowed(false),
     _wasInit(false),
     _inputBuf(NULL)
 {
@@ -801,7 +802,10 @@ HRESULT CDecoder::CodeReal()
   */
 
   if (res == S_OK)
+  {
+    _solidAllowed = true;
     res = res2;
+  }
      
   if (res == S_OK && _unpackSize_Defined && _writtenFileSize != _unpackSize)
     return S_FALSE;
@@ -821,6 +825,9 @@ STDMETHODIMP CDecoder::Code(ISequentialI
 {
   try
   {
+    if (_isSolid && !_solidAllowed)
+        return S_FALSE;
+    _solidAllowed = false;
     if (_dictSizeLog >= sizeof(size_t) * 8)
       return E_NOTIMPL;
 
diff -pruN '--exclude=*.orig' p7zip_16.02~/CPP/7zip/Compress/Rar5Decoder.h p7zip_16.02/CPP/7zip/Compress/Rar5Decoder.h
--- p7zip_16.02~/CPP/7zip/Compress/Rar5Decoder.h	2015-09-01 18:04:50.000000000 +0000
+++ p7zip_16.02/CPP/7zip/Compress/Rar5Decoder.h	2018-05-02 12:40:10.228144287 +0000
@@ -271,6 +271,7 @@ class CDecoder:
   Byte _dictSizeLog;
   bool _tableWasFilled;
   bool _isSolid;
+  bool _solidAllowed;
   bool _wasInit;
 
   UInt32 _reps[kNumReps];
