
Use abi::__cxa_demangle() to demangle C++ symbols, rather than the SunPro
libdemangle or illumos libdemangle-sys.

diff -wpruN '--exclude=*.orig' a~/hotspot/agent/src/os/solaris/proc/Makefile a/hotspot/agent/src/os/solaris/proc/Makefile
--- a~/hotspot/agent/src/os/solaris/proc/Makefile	1970-01-01 00:00:00
+++ a/hotspot/agent/src/os/solaris/proc/Makefile	1970-01-01 00:00:00
@@ -63,7 +63,7 @@ i386 amd64 sparc sparcv9:: javahomecheck
 	@$(JAVA_HOME)/bin/javah -classpath $(CLASSES_DIR) -d $@ -jni sun.jvm.hotspot.asm.Disassembler sun.jvm.hotspot.debugger.proc.ProcDebuggerLocal
 	CC $(CFLAGS/$@) -c -g -Kpic ${SAPROC_INCLUDES} -I$@ saproc.cpp -o $@/saproc.o
 	cc $(CFLAGS/$@) -c -g -Kpic ${SAPROC_INCLUDES} -I$@ $(SADIS) -o $@/sadis.o
-	CC $(CFLAGS/$@) -g -G -Kpic $@/saproc.o $@/sadis.o -M mapfile -o $@/libsaproc.so -ldemangle
+	CC $(CFLAGS/$@) -g -G -Kpic $@/saproc.o $@/sadis.o -M mapfile -o $@/libsaproc.so
 	CC $(CFLAGS/$@) -o $@/libsaproc_audit.so -G -Kpic -z defs saproc_audit.cpp -lmapmalloc -ldl -lc 
 
 clean::
diff -wpruN '--exclude=*.orig' a~/hotspot/agent/src/os/solaris/proc/saproc.cpp a/hotspot/agent/src/os/solaris/proc/saproc.cpp
--- a~/hotspot/agent/src/os/solaris/proc/saproc.cpp	1970-01-01 00:00:00
+++ a/hotspot/agent/src/os/solaris/proc/saproc.cpp	1970-01-01 00:00:00
@@ -30,7 +30,7 @@
 #include <thread_db.h>
 #include <strings.h>
 #include <limits.h>
-#include <demangle.h>
+#include <cxxabi.h>
 #include <stdarg.h>
 #include <stdlib.h>
 #include <errno.h>
@@ -1257,11 +1257,19 @@ JNIEXPORT jstring JNICALL Java_sun_jvm_h
   const char* ptr = env->GetStringUTFChars(name, &isCopy);
   char  buf[2*SYMBOL_BUF_SIZE + 1];
   jstring res = 0;
-  if (cplus_demangle((char*) ptr, buf, sizeof(buf)) != DEMANGLE_ESPACE) {
-    res = env->NewStringUTF(buf);
-  } else {
+  int   status;
+  char* result;
+  // Don't pass buf to __cxa_demangle. In case of the 'buf' is too small,
+  // __cxa_demangle will call system "realloc" for additional memory, which
+  // may use different malloc/realloc mechanism that allocates 'buf'.
     res = name;
+  if ((result = abi::__cxa_demangle(ptr, NULL, NULL, &status)) != NULL) {
+    if (strlcpy(buf, result, sizeof(buf)) < sizeof(buf))
+      res = env->NewStringUTF(buf);
+    // call c library's free
+    ::free(result);
   }
+
   env->ReleaseStringUTFChars(name, ptr);
   return res;
 }
diff -wpruN '--exclude=*.orig' a~/hotspot/make/solaris/makefiles/saproc.make a/hotspot/make/solaris/makefiles/saproc.make
--- a~/hotspot/make/solaris/makefiles/saproc.make	1970-01-01 00:00:00
+++ a/hotspot/make/solaris/makefiles/saproc.make	1970-01-01 00:00:00
@@ -107,7 +107,7 @@ $(LIBSAPROC): $(SASRCFILES) $(SADISOBJ)
 	           $(SADISOBJ)                                          \
 	           $(SA_LFLAGS)                                         \
 	           -o $@                                                \
-	           -ldl -ldemangle -lthread -lc
+	           -ldl -lthread -lc
 
 $(SADISOBJ): $(SADISSRCFILES)
 	           $(QUIETLY) $(CC)                                     \
diff -wpruN '--exclude=*.orig' a~/hotspot/src/os/solaris/vm/decoder_solaris.cpp a/hotspot/src/os/solaris/vm/decoder_solaris.cpp
--- a~/hotspot/src/os/solaris/vm/decoder_solaris.cpp	1970-01-01 00:00:00
+++ a/hotspot/src/os/solaris/vm/decoder_solaris.cpp	1970-01-01 00:00:00
@@ -24,9 +24,21 @@
 
 #include "utilities/decoder_elf.hpp"
 
-#include <demangle.h>
+#include <cxxabi.h>
 
 bool ElfDecoder::demangle(const char* symbol, char *buf, int buflen) {
-  return !cplus_demangle(symbol, buf, (size_t)buflen);
+  int   status;
+  char* result;
+  size_t size = (size_t)buflen;
+  // Don't pass buf to __cxa_demangle. In case of the 'buf' is too small,
+  // __cxa_demangle will call system "realloc" for additional memory, which
+  // may use different malloc/realloc mechanism that allocates 'buf'.
+  if ((result = abi::__cxa_demangle(symbol, NULL, NULL, &status)) != NULL) {
+      jio_snprintf(buf, buflen, "%s", result);
+      // call c library's free
+      ::free(result);
+      return true;
+  }
+  return false;
 }
 
