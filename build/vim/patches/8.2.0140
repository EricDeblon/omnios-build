To: vim_dev@googlegroups.com
Subject: Patch 8.2.0140
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.2.0140
Problem:    CI does not test building doc tags.
Solution:   Add the vimtags/gcc build. Cleanup showing version. (Ozaki Kiichi,
            closes #5513)
Files:	    .travis.yml, Filelist, ci/if_ver-1.vim, ci/if_ver-2.vim,
            ci/if_ver-cmd.vim, runtime/doc/Makefile, runtime/doc/doctags.vim,
            src/testdir/if_ver-1.vim, src/testdir/if_ver-2.vim


*** ../vim-8.2.0139/.travis.yml	2019-11-01 19:41:32.000000000 +0100
--- .travis.yml	2020-01-21 22:06:19.627909813 +0100
***************
*** 9,15 ****
      - &small
        BUILD=yes TEST=test COVERAGE=no FEATURES=small CONFOPT= SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &normal
!       BUILD=yes TEST=test COVERAGE=no FEATURES=normal CONFOPT= SHADOWOPT="-C src/shadow" SRCDIR=./src/shadow CHECK_AUTOCONF=no
      - &linux-huge
        BUILD=yes TEST="scripttests test_libvterm" COVERAGE=yes CFLAGS=--coverage LDFLAGS=--coverage FEATURES=huge SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
        "CONFOPT='--enable-perlinterp --enable-pythoninterp --enable-python3interp --enable-rubyinterp --enable-luainterp --enable-tclinterp'"
--- 9,15 ----
      - &small
        BUILD=yes TEST=test COVERAGE=no FEATURES=small CONFOPT= SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &normal
!       BUILD=yes TEST=test COVERAGE=no FEATURES=normal CONFOPT= SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &linux-huge
        BUILD=yes TEST="scripttests test_libvterm" COVERAGE=yes CFLAGS=--coverage LDFLAGS=--coverage FEATURES=huge SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
        "CONFOPT='--enable-perlinterp --enable-pythoninterp --enable-python3interp --enable-rubyinterp --enable-luainterp --enable-tclinterp'"
***************
*** 21,26 ****
--- 21,28 ----
      - &asan # ASAN build
        SANITIZER_CFLAGS="-g -O1 -DABORT_ON_INTERNAL_ERROR -DEXITFREE -fsanitize=address -fno-omit-frame-pointer"
        ASAN_OPTIONS="print_stacktrace=1 log_path=asan" LSAN_OPTIONS="suppressions=$TRAVIS_BUILD_DIR/src/testdir/lsan-suppress.txt"
+     - &shadowopt
+       SHADOWOPT="-C src/shadow" SRCDIR=./src/shadow
  
    linux: &linux
      os: linux
***************
*** 133,151 ****
      fi
    - echo -en "travis_fold:end:build\\r\\033[0K"
    - set +o errexit
-   - echo -e "\\033[33;1mTesting Vim\\033[0m" && echo -en "travis_fold:start:test\\r\\033[0K"
    # Show Vim version and also if_xx versions.
    - |
      if [[ "${BUILD}" = "yes" ]]; then
        "${SRCDIR}"/vim --version
!       "${SRCDIR}"/vim --not-a-term -u NONE -S "${SRCDIR}"/testdir/if_ver-1.vim -c quit > /dev/null
!       "${SRCDIR}"/vim --not-a-term -u NONE -S "${SRCDIR}"/testdir/if_ver-2.vim -c quit > /dev/null
!       cat if_ver.txt
      fi
!   - >
!     do_test make ${SHADOWOPT} ${TEST} &&
!     make -C runtime/doc vimtags VIMEXE=../../"${SRCDIR}"/vim &&
!     FOLD_MARKER=travis_fold
    - echo -en "${FOLD_MARKER}:end:test\\r\\033[0K"
  
  
--- 135,149 ----
      fi
    - echo -en "travis_fold:end:build\\r\\033[0K"
    - set +o errexit
    # Show Vim version and also if_xx versions.
    - |
      if [[ "${BUILD}" = "yes" ]]; then
        "${SRCDIR}"/vim --version
!       "${SRCDIR}"/vim --clean --not-a-term -esNX -V1 -S ci/if_ver-1.vim -c quit
!       "${SRCDIR}"/vim --clean --not-a-term -esNX -V1 -S ci/if_ver-2.vim -c quit
      fi
!   - echo -e "\\033[33;1mTesting Vim\\033[0m" && echo -en "travis_fold:start:test\\r\\033[0K"
!   - do_test make ${SHADOWOPT} ${TEST} && FOLD_MARKER=travis_fold
    - echo -en "${FOLD_MARKER}:end:test\\r\\033[0K"
  
  
***************
*** 194,204 ****
      - <<: *linux
        name: normal/clang
        compiler: clang
!       env: *normal
      - <<: *linux
        name: normal/gcc
        compiler: gcc
!       env: *normal
      - <<: *linux
        name: huge+coverage/clang
        compiler: clang
--- 192,206 ----
      - <<: *linux
        name: normal/clang
        compiler: clang
!       env:
!         - *normal
!         - *shadowopt
      - <<: *linux
        name: normal/gcc
        compiler: gcc
!       env:
!         - *normal
!         - *shadowopt
      - <<: *linux
        name: huge+coverage/clang
        compiler: clang
***************
*** 228,232 ****
--- 230,240 ----
          - *linux-huge
          - TEST="-C src testgui"
        after_success: *coverage
+     - <<: *linux
+       name: vimtags/gcc
+       compiler: gcc
+       env:
+         - *normal
+         - TEST="-C runtime/doc vimtags VIMEXE=../../${SRCDIR}/vim"
  
  # vim:set sts=2 sw=2 tw=0 et:
*** ../vim-8.2.0139/Filelist	2020-01-08 21:42:41.947057539 +0100
--- Filelist	2020-01-21 22:06:19.627909813 +0100
***************
*** 11,16 ****
--- 11,17 ----
  		.cirrus.yml \
  		appveyor.yml \
  		ci/appveyor.bat \
+ 		ci/if_ver*.vim \
  		src/Make_all.mak \
  		src/README.md \
  		src/alloc.h \
***************
*** 177,183 ****
  		src/testdir/dumps/*.dump \
  		src/testdir/samples/*.txt \
  		src/testdir/samples/test000 \
- 		src/testdir/if_ver*.vim \
  		src/testdir/color_ramp.vim \
  		src/testdir/silent.wav \
  		src/testdir/popupbounce.vim \
--- 178,183 ----
*** ../vim-8.2.0139/ci/if_ver-1.vim	2020-01-21 22:13:04.102611737 +0100
--- ci/if_ver-1.vim	2020-01-21 22:06:19.627909813 +0100
***************
*** 0 ****
--- 1,25 ----
+ " Print all interface versions for Ubuntu. Part 1.
+ 
+ if 1
+   execute 'source' expand('<sfile>:h') .. '/if_ver-cmd.vim'
+ 
+   echo "*** Interface versions ***\n"
+ 
+   echo 'Lua:'
+   PrintVer lua print(_VERSION)
+ 
+   echo 'MzScheme:'
+   PrintVer mzscheme (display (version))
+ 
+   echo 'Perl:'
+   PrintVer perl print $^V
+ 
+   echo 'Ruby:'
+   PrintVer ruby print RUBY_VERSION
+ 
+   echo 'Tcl:'
+   PrintVer tcl puts [info patchlevel]
+ 
+   echo 'Python 2:'
+   PrintVer python print sys.version
+ endif
*** ../vim-8.2.0139/ci/if_ver-2.vim	2020-01-21 22:13:04.110611709 +0100
--- ci/if_ver-2.vim	2020-01-21 22:06:19.631909803 +0100
***************
*** 0 ****
--- 1,8 ----
+ " Print py3 interface versions for Ubuntu. Part 2.
+ 
+ if 1
+   execute 'source' expand('<sfile>:h') .. '/if_ver-cmd.vim'
+ 
+   echo 'Python 3:'
+   PrintVer python3 print(sys.version)
+ endif
*** ../vim-8.2.0139/ci/if_ver-cmd.vim	2020-01-21 22:13:04.114611694 +0100
--- ci/if_ver-cmd.vim	2020-01-21 22:06:19.631909803 +0100
***************
*** 0 ****
--- 1,12 ----
+ " Provide 'PrintVer' command to print the interface versions.
+ 
+ func s:print_ver(lang, ...)
+   if has(a:lang)
+     exec a:lang join(a:000)
+   else
+     echo 'N/A'
+   endif
+   echo ''
+ endfunc
+ 
+ command -nargs=+ PrintVer call <SID>print_ver(<f-args>)
*** ../vim-8.2.0139/runtime/doc/Makefile	2019-11-04 21:22:35.000000000 +0100
--- runtime/doc/Makefile	2020-01-21 22:06:19.631909803 +0100
***************
*** 323,332 ****
  # Use Vim to generate the tags file.  Can only be used when Vim has been
  # compiled and installed.  Supports multiple languages.
  vimtags: $(DOCS)
! 	@if command -v $(VIMEXE); then \
! 	    $(VIMEXE) --clean -eX -u doctags.vim >/dev/null && \
! 	      echo "help tags updated"; \
! 	  else echo "vim executable $(VIMEXE) not found; help tags not updated"; fi
  
  # Use "doctags" to generate the tags file.  Only works for English!
  tags: doctags $(DOCS)
--- 323,329 ----
  # Use Vim to generate the tags file.  Can only be used when Vim has been
  # compiled and installed.  Supports multiple languages.
  vimtags: $(DOCS)
! 	@$(VIMEXE) --clean -esX -V1 -u doctags.vim
  
  # Use "doctags" to generate the tags file.  Only works for English!
  tags: doctags $(DOCS)
*** ../vim-8.2.0139/runtime/doc/doctags.vim	2019-11-01 19:41:32.000000000 +0100
--- runtime/doc/doctags.vim	2020-01-21 22:06:19.631909803 +0100
***************
*** 2,6 ****
  "
  " Usage: vim -eX -u doctags.vim
  
! helptags ++t .
  qa!
--- 2,13 ----
  "
  " Usage: vim -eX -u doctags.vim
  
! try
!   helptags ++t .
!   echo 'help tags updated'
! catch
!   echo v:exception
!   echo 'help tags failed update'
! endtry
! echo ''
  qa!
*** ../vim-8.2.0139/src/testdir/if_ver-1.vim	2017-08-06 17:03:14.000000000 +0200
--- src/testdir/if_ver-1.vim	1970-01-01 01:00:00.000000000 +0100
***************
*** 1,26 ****
- " Print all interface versions and write the result into if_ver.txt.
- " For Ubuntu. Part 1.
- 
- redir! > if_ver.txt
- if 1
-   echo "*** Interface versions ***"
-   echo "\nLua:"
-   lua print(_VERSION)
-   " echo "\nLuaJIT:"
-   " lua print(jit.version)
-   if has('mzscheme')
-     echo "\nMzScheme:"
-     mzscheme (display (version))
-   endif
-   echo "\nPerl:"
-   perl print $^V
-   echo "\nRuby:"
-   ruby print RUBY_VERSION
-   if has('tcl')
-     echo "\nTcl:"
-     tcl puts [info patchlevel]
-   endif
-   echo "\nPython 2:"
-   python import sys; print sys.version
- endif
- redir END
--- 0 ----
*** ../vim-8.2.0139/src/testdir/if_ver-2.vim	2017-08-06 17:03:14.000000000 +0200
--- src/testdir/if_ver-2.vim	1970-01-01 01:00:00.000000000 +0100
***************
*** 1,10 ****
- " Print py3 interface version and write the result into if_ver.txt.
- " For Ubuntu. Part 2.
- 
- redir! >> if_ver.txt
- if 1
-   echo "\nPython 3:"
-   python3 import sys; print(sys.version)
-   echo "\n"
- endif
- redir END
--- 0 ----
*** ../vim-8.2.0139/src/version.c	2020-01-20 22:05:31.089183107 +0100
--- src/version.c	2020-01-21 22:12:52.158652444 +0100
***************
*** 744,745 ****
--- 744,747 ----
  {   /* Add new patch number below this line */
+ /**/
+     140,
  /**/

-- 
            |

Ceci n'est pas une pipe.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
