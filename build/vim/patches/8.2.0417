To: vim_dev@googlegroups.com
Subject: Patch 8.2.0417
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.2.0417
Problem:    Travis CI config can be improved.
Solution:   Remove COVERAGE variable. Add load-snd-dummy script. add "-i NONE"
            to avoid messages about viminfo. (Ozaki Kiichi, closes #5813)
Files:      .travis.yml, ci/load-snd-dummy.sh


*** ../vim-8.2.0416/.travis.yml	2020-03-16 12:09:27.344858944 +0100
--- .travis.yml	2020-03-20 18:07:58.507657929 +0100
***************
*** 3,23 ****
  _anchors:
    envs:
      - &tiny-nogui
!       BUILD=yes TEST=test COVERAGE=no FEATURES=tiny "CONFOPT='--disable-gui'" SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &tiny
!       BUILD=yes TEST=test COVERAGE=no FEATURES=tiny CONFOPT= SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &small
!       BUILD=yes TEST=test COVERAGE=no FEATURES=small CONFOPT= SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &normal
!       BUILD=yes TEST=test COVERAGE=no FEATURES=normal CONFOPT= SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &linux-huge
!       BUILD=yes TEST="scripttests test_libvterm" COVERAGE=yes CFLAGS=--coverage LDFLAGS=--coverage FEATURES=huge SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
        "CONFOPT='--enable-perlinterp --enable-pythoninterp --enable-python3interp --enable-rubyinterp --enable-luainterp --enable-tclinterp'"
      - &osx-huge # macOS build
!       BUILD=yes TEST=test COVERAGE=no FEATURES=huge SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
        "CONFOPT='--enable-perlinterp --enable-pythoninterp --enable-rubyinterp --enable-luainterp --enable-tclinterp'"
      - &unittests
!       BUILD=no TEST=unittests COVERAGE=yes CFLAGS=--coverage LDFLAGS=--coverage FEATURES=huge SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=yes
      - &asan # ASAN build
        SANITIZER_CFLAGS="-g -O1 -DABORT_ON_INTERNAL_ERROR -DEXITFREE -fsanitize=address -fno-omit-frame-pointer"
        ASAN_OPTIONS="print_stacktrace=1 log_path=asan" LSAN_OPTIONS="suppressions=$TRAVIS_BUILD_DIR/src/testdir/lsan-suppress.txt"
--- 3,23 ----
  _anchors:
    envs:
      - &tiny-nogui
!       BUILD=yes TEST=test FEATURES=tiny "CONFOPT='--disable-gui'" SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &tiny
!       BUILD=yes TEST=test FEATURES=tiny CONFOPT= SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &small
!       BUILD=yes TEST=test FEATURES=small CONFOPT= SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &normal
!       BUILD=yes TEST=test FEATURES=normal CONFOPT= SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
      - &linux-huge
!       BUILD=yes TEST="scripttests test_libvterm" CFLAGS=--coverage LDFLAGS=--coverage FEATURES=huge SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
        "CONFOPT='--enable-perlinterp --enable-pythoninterp --enable-python3interp --enable-rubyinterp --enable-luainterp --enable-tclinterp'"
      - &osx-huge # macOS build
!       BUILD=yes TEST=test FEATURES=huge SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=no
        "CONFOPT='--enable-perlinterp --enable-pythoninterp --enable-rubyinterp --enable-luainterp --enable-tclinterp'"
      - &unittests
!       BUILD=no TEST=unittests CFLAGS=--coverage LDFLAGS=--coverage FEATURES=huge SHADOWOPT= SRCDIR=./src CHECK_AUTOCONF=yes
      - &asan # ASAN build
        SANITIZER_CFLAGS="-g -O1 -DABORT_ON_INTERNAL_ERROR -DEXITFREE -fsanitize=address -fno-omit-frame-pointer"
        ASAN_OPTIONS="print_stacktrace=1 log_path=asan" LSAN_OPTIONS="suppressions=$TRAVIS_BUILD_DIR/src/testdir/lsan-suppress.txt"
***************
*** 56,87 ****
          if [[ "$(which python3)" =~ ^/opt/python/ ]]; then
            export PATH=$(py3=$(which python3); echo ${PATH//${py3%/python3}:/})
          fi
-       - |
-         if [[ "${COVERAGE}" = "yes" ]]; then
-           pip install --user cpp-coveralls
-         fi
-       # needed for https support for coveralls
-       # building cffi only works with gcc, not with clang
-       - |
-         if [[ "${COVERAGE}" = "yes" ]]; then
-           CC=gcc pip install --user pyopenssl ndg-httpsclient pyasn1
-         fi
        # Use llvm-cov instead of gcov when compiler is clang.
        - |
          if [[ "${CC}" = "clang" ]]; then
            ln -sf "$(which llvm-cov)" /home/travis/bin/gcov
          fi
      before_script:
        - |
-         # Start virtual framebuffer to be able to test the GUI. For dists newer
-         # than trusty, the "services: xvfb" setting should be used instead
          if [[ ${TRAVIS_DIST} = trusty ]]; then
            export DISPLAY=:99.0
            sh -e /etc/init.d/xvfb start && sleep 3
          fi
!       - |
!         # Sound testing works without this in newer dists
!         [ ${TRAVIS_DIST} != trusty ] || sudo modprobe snd-dummy
        - sudo usermod -a -G audio $USER
        - do_test() { sg audio "sg $(id -gn) '$*'"; }
  
--- 56,75 ----
          if [[ "$(which python3)" =~ ^/opt/python/ ]]; then
            export PATH=$(py3=$(which python3); echo ${PATH//${py3%/python3}:/})
          fi
        # Use llvm-cov instead of gcov when compiler is clang.
        - |
          if [[ "${CC}" = "clang" ]]; then
            ln -sf "$(which llvm-cov)" /home/travis/bin/gcov
          fi
      before_script:
+       # Start virtual framebuffer to be able to test the GUI. For dists newer
+       # than trusty, the "services: xvfb" setting should be used instead
        - |
          if [[ ${TRAVIS_DIST} = trusty ]]; then
            export DISPLAY=:99.0
            sh -e /etc/init.d/xvfb start && sleep 3
          fi
!       - sudo bash ci/load-snd-dummy.sh || true
        - sudo usermod -a -G audio $USER
        - do_test() { sg audio "sg $(id -gn) '$*'"; }
  
***************
*** 106,111 ****
--- 94,102 ----
        - export LUA_PREFIX=/usr/local
  
    coverage: &coverage
+     # needed for https support for coveralls building cffi only works with gcc,
+     # not with clang
+     - CC=gcc pip install --user cpp-coveralls pyopenssl ndg-httpsclient pyasn1
      - ~/.local/bin/coveralls -b "${SRCDIR}" -x .xs -e "${SRCDIR}"/if_perl.c -e "${SRCDIR}"/xxd -e "${SRCDIR}"/libvterm --encodings utf-8
      - (cd "${SRCDIR}" && bash <(curl -s https://codecov.io/bash))
  
***************
*** 145,152 ****
    - |
      if [[ "${BUILD}" = "yes" ]]; then
        "${SRCDIR}"/vim --version
!       "${SRCDIR}"/vim -u NONE --not-a-term -esNX -V1 -S ci/if_ver-1.vim -c quit
!       "${SRCDIR}"/vim -u NONE --not-a-term -esNX -V1 -S ci/if_ver-2.vim -c quit
      fi
    - echo -e "\\033[33;1mTesting Vim\\033[0m" && echo -en "travis_fold:start:test\\r\\033[0K"
    - do_test make ${SHADOWOPT} ${TEST} && FOLD_MARKER=travis_fold
--- 136,143 ----
    - |
      if [[ "${BUILD}" = "yes" ]]; then
        "${SRCDIR}"/vim --version
!       "${SRCDIR}"/vim -u NONE -i NONE --not-a-term -esNX -V1 -S ci/if_ver-1.vim -c quit
!       "${SRCDIR}"/vim -u NONE -i NONE --not-a-term -esNX -V1 -S ci/if_ver-2.vim -c quit
      fi
    - echo -e "\\033[33;1mTesting Vim\\033[0m" && echo -en "travis_fold:start:test\\r\\033[0K"
    - do_test make ${SHADOWOPT} ${TEST} && FOLD_MARKER=travis_fold
***************
*** 213,221 ****
        arch: s390x
        name: huge/gcc-s390x
        compiler: gcc
!       env:
!         - *linux-huge
!         - COVERAGE=no
        addons:
          apt:
            packages:
--- 204,210 ----
        arch: s390x
        name: huge/gcc-s390x
        compiler: gcc
!       env: *linux-huge
        addons:
          apt:
            packages:
*** ../vim-8.2.0416/ci/load-snd-dummy.sh	2020-03-20 18:11:04.831018054 +0100
--- ci/load-snd-dummy.sh	2020-03-20 18:07:58.507657929 +0100
***************
*** 0 ****
--- 1,8 ----
+ #!/bin/bash
+ set -e
+ 
+ if ! modprobe snd-dummy; then
+     # snd-dummy is contained in linux-modules-extra (if exists)
+     apt install -y "linux-modules-extra-$(uname -r)"
+     modprobe snd-dummy
+ fi
*** ../vim-8.2.0416/src/version.c	2020-03-19 20:33:29.785091518 +0100
--- src/version.c	2020-03-20 18:10:54.479053847 +0100
***************
*** 740,741 ****
--- 740,743 ----
  {   /* Add new patch number below this line */
+ /**/
+     417,
  /**/

-- 
Even got a Datapoint 3600(?) with a DD50 connector instead of the
usual DB25...  what a nightmare trying to figure out the pinout
for *that* with no spex...

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
