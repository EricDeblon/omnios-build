
Binutils commit

    https://sourceware.org/git/?p=binutils-gdb.git;a=commit;h=8ee10e86093150c70360d9e26b29e6d9b6398f33

introduced a new '-z start-stop-gc' option to control the garbage collection
of symbols that match a synthesised __start__ or __stop__ symbol
when --gc-sections is in effect.
This is supposed to be off by default, preserving previous behaviour.

Unfortunately, the change had an impact on the way that loader uses an
ldscript to build /boot/loader, causing linker sets to be omitted from the
final binary, and therefore removing most commands.

Upstream issue opened at https://sourceware.org/bugzilla/show_bug.cgi?id=28143

For now, revert the portion of this change which breaks the illumos build.

diff -wpruN '--exclude=*.orig' a~/bfd/elflink.c a/bfd/elflink.c
--- a~/bfd/elflink.c	1970-01-01 00:00:00
+++ a/bfd/elflink.c	1970-01-01 00:00:00
@@ -13724,7 +13724,7 @@ _bfd_elf_gc_mark_rsec (struct bfd_link_i
 	  hw->mark = 1;
 	}
 
-      if (!was_marked && h->start_stop && !h->root.ldscript_def)
+      if (!was_marked && h->start_stop)
 	{
 	  if (info->start_stop_gc)
 	    return NULL;
@@ -15317,7 +15317,6 @@ bfd_elf_define_start_stop (struct bfd_li
 			    false, false, true);
   /* NB: Common symbols will be turned into definition later.  */
   if (h != NULL
-      && !h->root.ldscript_def
       && (h->root.type == bfd_link_hash_undefined
 	  || h->root.type == bfd_link_hash_undefweak
 	  || ((h->ref_regular || h->def_dynamic)
diff -wpruN '--exclude=*.orig' a~/bfd/linker.c a/bfd/linker.c
--- a~/bfd/linker.c	1970-01-01 00:00:00
+++ a/bfd/linker.c	1970-01-01 00:00:00
@@ -3184,7 +3184,6 @@ bfd_generic_define_start_stop (struct bf
 
   h = bfd_link_hash_lookup (info->hash, symbol, false, false, true);
   if (h != NULL
-      && !h->ldscript_def
       && (h->type == bfd_link_hash_undefined
 	  || h->type == bfd_link_hash_undefweak))
     {
