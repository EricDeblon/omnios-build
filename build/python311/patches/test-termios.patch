diff -wpruN --no-dereference '--exclude=*.orig' a~/Lib/test/test_termios.py a/Lib/test/test_termios.py
--- a~/Lib/test/test_termios.py	1970-01-01 00:00:00
+++ a/Lib/test/test_termios.py	1970-01-01 00:00:00
@@ -152,6 +152,8 @@ class TestFunctions(unittest.TestCase):
         self.assertRaises(TypeError, termios.tcflow, object(), termios.TCOON)
         self.assertRaises(TypeError, termios.tcflow, self.fd)
 
+    @unittest.skipIf(sys.platform.startswith("sunos"),
+         "TIOCGWINSZ returns EINVAL for terminals with no size")
     def test_tcgetwinsize(self):
         size = termios.tcgetwinsize(self.fd)
         self.assertIsInstance(size, tuple)
@@ -160,6 +162,8 @@ class TestFunctions(unittest.TestCase):
         self.assertIsInstance(size[1], int)
         self.assertEqual(termios.tcgetwinsize(self.stream), size)
 
+    @unittest.skipIf(sys.platform.startswith("sunos"),
+         "TIOCGWINSZ returns EINVAL for terminals with no size")
     def test_tcgetwinsize_errors(self):
         self.assertRaisesTermiosError(errno.ENOTTY, termios.tcgetwinsize, self.bad_fd)
         self.assertRaises(ValueError, termios.tcgetwinsize, -1)
@@ -167,12 +171,16 @@ class TestFunctions(unittest.TestCase):
         self.assertRaises(TypeError, termios.tcgetwinsize, object())
         self.assertRaises(TypeError, termios.tcgetwinsize)
 
+    @unittest.skipIf(sys.platform.startswith("sunos"),
+         "TIOCGWINSZ returns EINVAL for terminals with no size")
     def test_tcsetwinsize(self):
         size = termios.tcgetwinsize(self.fd)
         termios.tcsetwinsize(self.fd, size)
         termios.tcsetwinsize(self.fd, list(size))
         termios.tcsetwinsize(self.stream, size)
 
+    @unittest.skipIf(sys.platform.startswith("sunos"),
+         "TIOCGWINSZ returns EINVAL for terminals with no size")
     def test_tcsetwinsize_errors(self):
         size = termios.tcgetwinsize(self.fd)
         self.assertRaises(TypeError, termios.tcsetwinsize, self.fd, size[:-1])
