diff -wpruN '--exclude=*.orig' openssh-7.7p1~/auth-pam.c openssh-7.7p1/auth-pam.c
--- openssh-7.7p1~/auth-pam.c	2018-07-11 14:51:09.426493690 +0000
+++ openssh-7.7p1/auth-pam.c	2018-07-11 14:51:09.653852857 +0000
@@ -1094,6 +1094,20 @@ do_pam_account(void)
 	return (sshpam_account_status);
 }
 
+#ifdef HAVE_PAM_AUSER
+void
+do_pam_set_auser(const char* auser)
+{
+	if (auser != NULL) {
+		debug("PAM: setting PAM_AUSER to \"%s\"", auser);
+		sshpam_err = pam_set_item(sshpam_handle, PAM_AUSER, auser);
+		if (sshpam_err != PAM_SUCCESS)
+			error("PAM: failed to set PAM_AUSER: %s",
+			    pam_strerror(sshpam_handle, sshpam_err));
+	}
+}
+#endif
+
 void
 do_pam_setcred(int init)
 {
diff -wpruN '--exclude=*.orig' openssh-7.7p1~/auth-pam.h openssh-7.7p1/auth-pam.h
--- openssh-7.7p1~/auth-pam.h	2018-04-02 05:38:28.000000000 +0000
+++ openssh-7.7p1/auth-pam.h	2018-07-11 14:51:09.654055575 +0000
@@ -44,4 +44,9 @@ int sshpam_get_maxtries_reached(void);
 void sshpam_set_maxtries_reached(int);
 int is_pam_session_open(void);
 
+#ifdef HAVE_PAM_AUSER
+void do_pam_set_auser(const char *);
+#endif
+void do_pam_set_tty(const char *);
+
 #endif /* USE_PAM */
diff -wpruN '--exclude=*.orig' openssh-7.7p1~/auth.h openssh-7.7p1/auth.h
--- openssh-7.7p1~/auth.h	2018-07-11 14:51:09.426738504 +0000
+++ openssh-7.7p1/auth.h	2018-07-11 14:51:09.654250163 +0000
@@ -98,6 +98,9 @@ struct Authctxt {
 #ifdef PAM_ENHANCEMENT
 	char		*authmethod_name;
 #endif
+#ifdef HAVE_PAM_AUSER
+	char		*auser;
+#endif
 };
 
 /*
diff -wpruN '--exclude=*.orig' openssh-7.7p1~/auth2-hostbased.c openssh-7.7p1/auth2-hostbased.c
--- openssh-7.7p1~/auth2-hostbased.c	2018-04-02 05:38:28.000000000 +0000
+++ openssh-7.7p1/auth2-hostbased.c	2018-07-11 14:51:09.654455452 +0000
@@ -85,6 +85,9 @@ userauth_hostbased(struct ssh *ssh)
 	debug("signature:");
 	sshbuf_dump_data(sig, siglen, stderr);
 #endif
+#ifdef HAVE_PAM_AUSER
+	authctxt->auser = NULL;
+#endif
 	pktype = sshkey_type_from_name(pkalg);
 	if (pktype == KEY_UNSPEC) {
 		/* this is perfectly legal */
@@ -145,6 +148,13 @@ userauth_hostbased(struct ssh *ssh)
 	    sshbuf_ptr(b), sshbuf_len(b), pkalg, ssh->compat)) == 0)
 		authenticated = 1;
 
+#ifdef HAVE_PAM_AUSER
+	if (authenticated) {
+		authctxt->auser = cuser;
+		cuser = NULL;
+	}
+#endif
+
 	auth2_record_key(authctxt, authenticated, key);
 	sshbuf_free(b);
 done:
diff -wpruN '--exclude=*.orig' openssh-7.7p1~/auth2.c openssh-7.7p1/auth2.c
--- openssh-7.7p1~/auth2.c	2018-07-11 14:51:09.564886023 +0000
+++ openssh-7.7p1/auth2.c	2018-07-11 14:51:09.654707730 +0000
@@ -346,6 +346,14 @@ userauth_finish(struct ssh *ssh, int aut
 #endif
 	}
 
+#ifdef HAVE_PAM_AUSER
+	if (!use_privsep) {
+		do_pam_set_auser(authctxt->auser);
+		free(authctxt->auser);
+		authctxt->auser = NULL;	
+	}
+#endif
+
 	if (authenticated && options.num_auth_methods != 0) {
 
 #if defined(USE_PAM) && defined(PAM_ENHANCEMENT)
diff -wpruN '--exclude=*.orig' openssh-7.7p1~/monitor.c openssh-7.7p1/monitor.c
--- openssh-7.7p1~/monitor.c	2018-07-11 14:51:09.569925053 +0000
+++ openssh-7.7p1/monitor.c	2018-07-11 14:51:09.655225111 +0000
@@ -415,6 +415,12 @@ monitor_child_preauth(Authctxt *_authctx
 		}
 	}
 
+#if defined(HAVE_PAM_AUSER) && defined(USE_PAM)
+	if (hostbased_cuser != NULL) {
+		free(hostbased_cuser);
+		hostbased_cuser = NULL;
+	}
+#endif
 	if (!authctxt->valid)
 		fatal("%s: authenticated invalid user", __func__);
 	if (strcmp(auth_method, "unknown") == 0)
@@ -618,14 +624,16 @@ monitor_reset_key_state(void)
 {
 	/* reset state */
 	free(key_blob);
+#if !defined(HAVE_PAM_AUSER) || !defined(USE_PAM)
 	free(hostbased_cuser);
+	hostbased_cuser = NULL;
+#endif
 	free(hostbased_chost);
 	sshauthopt_free(key_opts);
 	key_blob = NULL;
 	key_bloblen = 0;
 	key_blobtype = MM_NOKEY;
 	key_opts = NULL;
-	hostbased_cuser = NULL;
 	hostbased_chost = NULL;
 }
 
@@ -1087,6 +1095,11 @@ mm_answer_pam_account(int sock, Buffer *
 	if (!options.use_pam)
 		fatal("%s: PAM not enabled", __func__);
 
+#ifdef HAVE_PAM_AUSER
+	if (hostbased_cuser != NULL)
+		do_pam_set_auser(hostbased_cuser);
+#endif
+
 	ret = do_pam_account();
 
 	buffer_put_int(m, ret);
