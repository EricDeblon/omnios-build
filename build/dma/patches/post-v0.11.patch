From f249aa412dd4a09881cb450390d1003815bd0013 Mon Sep 17 00:00:00 2001
From: Zach Crownover <zachary.crownover@gmail.com>
Date: Fri, 5 Aug 2016 15:24:27 -0700
Subject: [PATCH] dma - Fix security hole (#46)

Affecting DragonFly 4.6 and earlier, Matt Dillon fixed this in base after
finding out from BSDNow Episode 152. Comments following were from his commit
which explains better than I. Just taking his change and putting it here as well.

* dma makes an age-old mistake of not properly checking whether a file
  owned by a user is a symlink or not, a bug which the original mail.local
  also had.

* Add O_NOFOLLOW to disallow symlinks.

Thanks-to: BSDNow Episode 152, made me dive dma to check when they talked
           about the mail.local bug.

From 6748bdd435e6287cb36ea278fec2a1f7281be6bf Mon Sep 17 00:00:00 2001
From: Ed Maste <emaste@freebsd.org>
Date: Thu, 29 Sep 2016 17:25:36 -0400
Subject: [PATCH] dma-mbox-create: refactor to use a /var/mail directory fd

Based on a patch to Capsicumize dma-mbox-create for FreeBSD by
cem@FreeBSD.org, in https://reviews.freebsd.org/D7988

From 1cc2afab4c909e07cef2d57720b84e7534c13ad9 Mon Sep 17 00:00:00 2001
From: Mask66 <mask@mask.ms>
Date: Fri, 10 Feb 2017 18:36:29 +0100
Subject: [PATCH] use basename to select executable identity

We ran into problems calling dma (on FreeBSD) from the nagios check_mailq script,
and found out that it behaves correctly when called as just "mailq", but incorrectly
when called as "/usr/bin/mailq" (with a path) for example.
This patch written by my colleague Klaus-Uwe Ittner corrects this.

Also reported as https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=216910.
diff -pruN '--exclude=*.orig' dma-0.11~/dma-mbox-create.c dma-0.11/dma-mbox-create.c
--- dma-0.11~/dma-mbox-create.c	2016-02-07 13:41:49.000000000 +0000
+++ dma-0.11/dma-mbox-create.c	2017-12-06 20:54:47.248256067 +0000
@@ -89,9 +89,7 @@ main(int argc, char **argv)
 	struct group *gr;
 	uid_t user_uid;
 	gid_t mail_gid;
-	int error;
-	char fn[PATH_MAX+1];
-	int f;
+	int f, maildirfd;
 
 	openlog("dma-mbox-create", 0, LOG_MAIL);
 
@@ -131,26 +129,22 @@ main(int argc, char **argv)
 	if (!pw)
 		logfail(EX_NOUSER, "cannot find user `%s'", user);
 
-	user_uid = pw->pw_uid;
+	maildirfd = open(_PATH_MAILDIR, O_RDONLY);
+	if (maildirfd < 0)
+		logfail(EX_NOINPUT, "cannot open maildir %s", _PATH_MAILDIR);
 
-	error = snprintf(fn, sizeof(fn), "%s/%s", _PATH_MAILDIR, user);
-	if (error < 0 || (size_t)error >= sizeof(fn)) {
-		if (error >= 0) {
-			errno = 0;
-			logfail(EX_USAGE, "mbox path too long");
-		}
-		logfail(EX_CANTCREAT, "cannot build mbox path for `%s/%s'", _PATH_MAILDIR, user);
-	}
+	user_uid = pw->pw_uid;
 
-	f = open(fn, O_RDONLY|O_CREAT, 0600);
+	f = openat(maildirfd, user, O_RDONLY|O_CREAT|O_NOFOLLOW, 0600);
 	if (f < 0)
-		logfail(EX_NOINPUT, "cannt open mbox `%s'", fn);
+		logfail(EX_NOINPUT, "cannot open mbox `%s'", user);
 
 	if (fchown(f, user_uid, mail_gid))
-		logfail(EX_OSERR, "cannot change owner of mbox `%s'", fn);
+		logfail(EX_OSERR, "cannot change owner of mbox `%s'", user);
 
 	if (fchmod(f, 0620))
-		logfail(EX_OSERR, "cannot change permissions of mbox `%s'", fn);
+		logfail(EX_OSERR, "cannot change permissions of mbox `%s'",
+		    user);
 
 	/* file should be present with the right owner and permissions */
 
diff -pruN '--exclude=*.orig' dma-0.11~/dma.c dma-0.11/dma.c
--- dma-0.11~/dma.c	2017-12-06 20:54:47.212355495 +0000
+++ dma-0.11/dma.c	2017-12-06 20:54:47.248439215 +0000
@@ -47,6 +47,7 @@
 #include <errno.h>
 #include <fcntl.h>
 #include <inttypes.h>
+#include <libgen.h>
 #include <paths.h>
 #include <pwd.h>
 #include <signal.h>
@@ -457,7 +458,7 @@ main(int argc, char **argv)
 	memset(&queue, 0, sizeof (queue));
 	LIST_INIT(&queue.queue);
 
-	if (strcmp(argv[0], "mailq") == 0) {
+	if (strcmp(basename(argv[0]), "mailq") == 0) {
 		argv++; argc--;
 		showq = 1;
 		if (argc != 0)
